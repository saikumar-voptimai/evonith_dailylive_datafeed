# .github/workflows/deploy.yml
name: CI/CD Deploy to Raspberry Pi

on:
  push:
    branches: [ release ]

jobs:
  test-build-deploy:
    environment: Kalpvoptpi1p Env
    runs-on: ubuntu-latest
    env:
      PI_HOST: ${{ secrets.PI_HOST }}
      PI_USER: ${{ secrets.PI_USER }}
      PI_SSH_KEY: ${{ secrets.PI_SSH_KEY }}
      PI_PORT: 2222
      PROJECT_DIR: /home/voptimaise/evonith/dataloading/onlinedata
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install uv
        run: pip install uv

      - name: Create virtual environment
        run: uv venv

      - name: Run unittests with coverage
        run: |
          mkdir -p test_logs
          uv run coverage run -m unittest discover -s test
          uv run coverage report --fail-under=80

      - name: Check formatting with Black
        run: uv run black --check .

      - name: Lint with pylint
        run: uv run pylint src --fail-under=5.0

      - name: Get version
        id: version
        run: |
          PATCH=$(git rev-list --count HEAD)
          YY=$(date +"%y")
          WEEK=$(date +"%V")
          VERSION="$YY.$WEEK.$PATCH"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Archive project
        run: |
          mkdir -p dist
          tar --exclude=dist --exclude=.git --exclude=test_logs \
          --exclude=.venv --exclude="*.pyc" --exclude="__pycache__"\
              -czf dist/bf_eml_datafeed-${{ steps.version.outputs.version }}.tar.gz .

      - name: Copy to Raspberry Pi
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ env.PI_HOST }}
          username: ${{ env.PI_USER }}
          key: ${{ env.PI_SSH_KEY }}
          port: 2222
          request_pty: true
          source: "dist/bf_eml_datafeed-${{ steps.version.outputs.version }}.tar.gz"
          target: "${{ env.PROJECT_DIR }}"           # do NOT remove source
          strip_components: 1  
      
      - name: Confirm archive is a file
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.PI_HOST }}
          username: ${{ env.PI_USER }}
          key: ${{ env.PI_SSH_KEY }}
          port: 2222
          script: |
            file "${{ env.PROJECT_DIR }}/bf_eml_datafeed-${{ steps.version.outputs.version }}.tar.gz"
            ls -l "${{ env.PROJECT_DIR }}"

      - name: Deploy and update symlink
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ env.PI_HOST }}
          username: ${{ env.PI_USER }}
          key: ${{ env.PI_SSH_KEY }}
          port: 2222
          request_pty: true
          script: |
            set -e
            PROJECT_DIR="/home/voptimaise/evonith/dataloading/onlinedata"
            cd $PROJECT_DIR
            ls -l $PROJECT_DIR
            VERSION="${{ steps.version.outputs.version }}"
            ARCHIVE="bf_eml_datafeed-$VERSION.tar.gz"
            EXTRACTED_DIR="$PROJECT_DIR/bf_eml_datafeed-$VERSION"

            mkdir -p "$EXTRACTED_DIR"
            tar xzf "$ARCHIVE" -C "$EXTRACTED_DIR" --strip-components=1

            python3.12 -m venv "$EXTRACTED_DIR/.venv"
            "$EXTRACTED_DIR/.venv/bin/pip" install uv
            "$EXTRACTED_DIR/.venv/bin/uv" pip install

            ln -sfn "$EXTRACTED_DIR" "$PROJECT_DIR/current"
            echo "Symlink updated to bf_eml_datafeed-$VERSION"

            ls -dt $PROJECT_DIR/bf_eml_datafeed-* | tail -n +4 | xargs rm -rf || true

      - name: Rollback instructions
        run: |
          echo "To rollback, SSH into the Pi and repoint the symlink manually:"
          echo "ln -sfn /home/voptimaise/evonith/dataloading/onlinedata/bf_eml_datafeed-<old_version> /home/voptimaise/evonith/dataloading/onlinedata/current"
